name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: $${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'af-south-1'
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with: 
          mask-password: 'true'

      - name: Build, tag, and push Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: latest
          REPOSITORY: project-repo
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >>GITHUB_OUTPUT

      - name: New Image ID 
        id: task-def
        uses: aws-actions/amazon-ecs-render-taskdefinition@v1
        with: 
          task-definition: task_definition.json
          container-name: malapp
          image: ${{ steps.build-image.outputs.image }}
      - name: Deplot task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: my_service2
          cluster: malCluster
          wait-for-service-stability: true
          
        

     
